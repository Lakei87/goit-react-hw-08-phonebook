{"version":3,"file":"static/js/817.054eeaf6.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/index.jsx","components/ContactItem/contactItem.styled.jsx","components/ContactItem/index.jsx","components/ContactList/contactList.styled.jsx","components/ContactList/index.jsx","components/Notification/index.jsx","components/Filter/index.jsx","pages/Contacts/contact.styled.jsx","pages/Contacts/index.jsx","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["export const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsAddingContact = state => state.contacts.isAddingContact;","import { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from \"notiflix\";\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts, selectIsAddingContact} from 'redux/contacts/selectors';\nimport {\n  FormWrap,\n  Field,\n  Btn\n} from \"components/Box\";\n\nexport default function ContactForm() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsAddingContact);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.target;\n        const { name, phone } = form.elements;\n        const isContactInList = contacts.some(contact =>\n            contact.name.toLowerCase() === name.value.toLowerCase());\n        \n        if (isContactInList) {\n            name.focus();\n            return Notify.failure(`\"${name.value}\" is already in contacts`, {\n                timeout: 5000,\n            });\n        } else {\n            dispatch(addContact({\n                name: name.value,\n                phone: phone.value,\n            })).then(res => {\n                if (res.type.includes(\"fulfilled\")) Notify.success(\"Added\", {\n                    timeout: 2000,\n                    position: \"right-bottom\",\n                    width: \"130px\",\n                });\n            });\n        };\n\n        form.reset();\n        name.focus();\n    };\n\n    return (\n        <FormWrap\n            onSubmit={handleSubmit}>\n            <Field\n                label='Name'\n                variant='outlined'\n                required={true}\n                type='text'\n                name='name'\n            />\n            <Field\n                label='Phone'\n                variant='outlined'\n                required={true}\n                type='tel'\n                name='phone'\n            />\n            <Btn\n                type='submit'\n                variant='contained'\n                sx={{\n                    fontSize: 18,\n                    textTransform: \"none\"\n                }}\n            >\n                {isLoading\n                    ? (\"Loading...\")\n                    : (\"Add contact\")\n                }\n            </Btn>\n        </FormWrap>\n    );\n};","import { styled } from \"@mui/material/styles\";\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const Item = styled('li')(({ theme }) => ({\n    display: \"flex\",\n    padding: \"0 5px\",\n    color: \"#000\",\n    background: \"#dbd9d9\",\n    fontSize: \"18px\",\n    borderRadius: \"4px\",\n    '&:not(:last-child)': { marginBottom: 5 },\n    [theme.breakpoints.down('768')]: {\n        width: \"240px\",\n        \n    },\n    \n}));\n\nexport const ItemInner = styled('div')(({ theme }) => ({\n    flexGrow: 1,\n    [theme.breakpoints.up('768')]: {\n        display: \"flex\",\n\n    }\n    \n}));\n\nexport const TextWrap = styled('div')(({ theme }) => ({\n    width: \"220px\",\n    overflowWrap: \"break-word\",\n    [theme.breakpoints.up('768')]: {\n        width: \"250px\",\n    }\n}));\n\nexport const Text = styled('p')`\n    \n`;\n\nexport const BtnWrap = styled('div')(({ theme }) => ({\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: \"auto\",\n}));\n\nexport const Btn = styled(DeleteIcon)(({ theme }) => ({\n    cursor: \"pointer\",\n    '&:hover': { color: \"red\" },\n}));","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Item, ItemInner, TextWrap, Text, BtnWrap, Btn } from './contactItem.styled';\n\nexport default function ContactItem({ name, phone, contactId }) {\n    const dispatch = useDispatch();\n\n    const handleDelete = id => {\n        Confirm.show(\n            'Delete contact',\n            'Are you sure?',\n            'Yes',\n            'No',\n            () => {\n                dispatch(deleteContact(id));\n            },\n            () => {\n                return;\n            }\n        )\n    };\n    \n    return (\n        <Item>\n            <ItemInner>\n                <TextWrap>\n                    <Text>{ name }</Text>\n                </TextWrap>\n                <TextWrap>\n                    <Text>{ phone }</Text>\n                </TextWrap>\n            </ItemInner>\n            <BtnWrap>\n                <Btn type='button' onClick={() => handleDelete(contactId)}></Btn>\n            </BtnWrap>\n        </Item>\n    );\n};\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    contactId: PropTypes.string.isRequired,\n};","import { styled } from \"@mui/material/styles\";\n\nexport const List = styled('ul')(({ theme }) => ({\n    [theme.breakpoints.down('768')]: {\n        width: \"250px\",\n    }\n}));","import { useSelector } from 'react-redux';\nimport ContactItem from \"components/ContactItem\";\nimport { selectFilter, selectContacts } from 'redux/contacts/selectors';\nimport { List } from './contactList.styled';\n\nexport default function ContactList() {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const filteredContacts = contacts\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n\n    return (\n        <List>\n            {filteredContacts.map(({ _id, name, phone }) => {\n                return <ContactItem\n                    key={_id}\n                    name={name}\n                    phone={phone}\n                    contactId={_id}\n                />\n            })}\n        </List>\n    );\n};","import PropTypes from 'prop-types';\n\nexport default function Notification({message}) {\n    return <p>{message}</p>\n};\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};","import { useDispatch } from 'react-redux';\nimport { Field } from 'components/Box';\nimport { setFilter } from 'redux/contacts/slice';\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n\n    const handleFilterChange = e => {\n        dispatch(setFilter(e.target.value));\n    };\n\n    return (\n        <Field\n            type='text'\n            label='Search'\n            variant='outlined'\n            onChange={handleFilterChange}\n            sx={{marginBottom:\"10px\"}}\n        />\n    );\n};","import styled from \"styled-components\";\n\nexport const SubTitle = styled('h2')`\n    margin-bottom: 10px;\n    font-size: 24px;\n    font-weight: 500;\n    text-align: center;\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Notification from 'components/Notification';\nimport Filter from 'components/Filter';\nimport { Main, Section, Container } from 'components/Box';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { SubTitle } from './contact.styled';\n\nexport default function Contacts() {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n\n    return (\n        <Main sx={{justifyContent: \"start\"}}>\n            <Section>\n                <Container>\n                    <SubTitle>Add new contact</SubTitle>\n                    <ContactForm />\n                </Container>\n            </Section>\n            <Section>\n                <Container sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                }}>\n                    <SubTitle>Contact list</SubTitle>\n                    {contacts.length === 0\n                        ? (<Notification message={'Phonebook is empty. You can add a new contact.'} />)\n                        : <>\n                            <Filter />\n                            <ContactList />\n                        </>}\n                </Container>\n            </Section>\n        </Main>\n    );\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["selectFilter","state","contacts","filter","selectContacts","items","selectIsAddingContact","isAddingContact","ContactForm","dispatch","useDispatch","useSelector","isLoading","onSubmit","e","preventDefault","form","target","elements","name","phone","some","contact","toLowerCase","value","focus","Notify","timeout","addContact","then","res","type","includes","position","width","reset","label","variant","required","sx","fontSize","textTransform","Item","styled","theme","display","padding","color","background","borderRadius","marginBottom","breakpoints","down","ItemInner","flexGrow","up","TextWrap","overflowWrap","Text","BtnWrap","justifyContent","alignItems","marginLeft","Btn","DeleteIcon","cursor","ContactItem","contactId","onClick","id","Confirm","deleteContact","List","ContactList","filteredContacts","map","_id","Notification","message","Filter","onChange","setFilter","SubTitle","Contacts","useEffect","fetchContacts","flexDirection","length","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}