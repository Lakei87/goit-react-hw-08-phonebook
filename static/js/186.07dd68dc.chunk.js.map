{"version":3,"file":"static/js/186.07dd68dc.chunk.js","mappings":"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","sources":["components/Box.jsx","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/index.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/contactItem.module.css?65f5","components/ContactItem/index.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/index.jsx","components/Notification/index.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/index.jsx","pages/Contacts/index.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { color, typography, space } from 'styled-system';\n\nexport const Box = styled('div')(\n    color,\n    typography,\n    space,\n);\n\nexport const MainWrap = styled.main`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100vh;\n    align-items: center;\n`;\n\nexport const FormWrap = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 370px;\n    text-align: center;\n\n    & div{\n        margin-bottom: 5px;\n    }\n`;","export const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsAddingContact = state => state.contacts.isAddingContact;","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"contactForm_contactForm__f4X+T\",\"contactForm__input\":\"contactForm_contactForm__input__4cv2w\",\"contactForm__btn\":\"contactForm_contactForm__btn__mR+PI\",\"contactForm__label\":\"contactForm_contactForm__label__OOrTm\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts, selectIsAddingContact} from 'redux/contacts/selectors';\nimport styles from './contactForm.module.css';\n\nexport default function ContactForm() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsAddingContact);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.target;\n        const { name, phone } = form.elements;\n        const isContactInList = contacts.some(contact =>\n            contact.name.toLowerCase() === name.value.toLowerCase());\n        \n        if (isContactInList) {\n            name.focus();\n            return alert(`\"${name.value}\" is already in contacts`);\n        } else {\n            dispatch(addContact({\n                name: name.value,\n                phone: phone.value,\n            }));\n        };\n\n        form.reset();\n        name.focus();\n    };\n\n    return (\n        <form className={styles.contactForm} name=\"phoneBook\" onSubmit={handleSubmit}>\n            <label>\n                Name\n                <input\n                    autoFocus=\"autofocus\"\n                    className={styles.contactForm__input}\n                    type=\"text\"\n                    name=\"name\"\n                    // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </label>\n            <label>\n                Phone\n                <input\n                    className={styles.contactForm__input}\n                    type=\"tel\"\n                    name=\"phone\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </label>\n            <button\n                className={styles.contactForm__btn}\n                type=\"submit\">\n                {isLoading ? (\n                    \"Loading...\"\n                ) : (\n                    \"Add contact\"\n                )}\n            </button>\n        </form>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactList__item\":\"contactItem_contactList__item__Ezu8+\",\"contactList__name\":\"contactItem_contactList__name__tOpho\",\"contactList__number\":\"contactItem_contactList__number__4+egX\",\"contactList__btn\":\"contactItem_contactList__btn__UftMw\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport styles from './contactItem.module.css';\n\nexport default function ContactItem({ name, phone, contactId }) {\n    const dispatch = useDispatch();\n\n    const handleDelete = id => dispatch(deleteContact(id))\n    \n    return (\n        <li className={styles.contactList__item}>\n            <p className={styles.contactList__name}>{name}:</p>\n            <p className={styles.contactList__number}>{phone}</p>\n            <button\n                className={styles.contactList__btn}\n                type=\"button\"\n            onClick={() => handleDelete(contactId)}\n            >\n                Delete\n            </button>\n        </li>\n    );\n};\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    contactId: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contactList_contactList__rfM1N\"};","import { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport ContactItem from \"components/ContactItem\";\nimport styles from './contactList.module.css';\n\nexport default function ContactList() {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const filteredContacts = contacts\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n\n    return (\n        <ul className={styles.contactList}>\n            {filteredContacts.map(({ _id, name, phone }) => {\n                return <ContactItem\n                    key={_id}\n                    name={name}\n                    phone={phone}\n                    contactId={_id}\n                />\n            })}\n        </ul>\n    );\n};","import PropTypes from 'prop-types';\n\nexport default function Notification({message}) {\n    return <p>{message}</p>\n};\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"filter_filter__HJEMj\",\"label\":\"filter_label__nHxuJ\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/slice';\nimport styles from './filter.module.css';\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n\n    const handleFilterChange = e => {\n        dispatch(setFilter(e.target.value));\n    };\n\n    return (\n        <label>\n            Find contacts by name\n            <input\n                className={styles.filter}\n                type=\"text\"\n                onChange={handleFilterChange}\n            />\n        </label>\n    );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Notification from 'components/Notification';\nimport Filter from 'components/Filter';\nimport { Box } from 'components/Box';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n\n    return (\n        <Box textAlign='center'>\n            <h2>Add new contact</h2>\n            <ContactForm />\n            <h2>Contacts</h2>\n            {contacts.length === 0\n                ? (<Notification message={'Phonebook is empty. You can add a new contact.'} />)\n                : <>\n                    <Filter />\n                    <ContactList />\n                </>}\n        </Box>\n    );\n};\n"],"names":["Box","styled","color","typography","space","MainWrap","FormWrap","selectFilter","state","contacts","filter","selectContacts","items","selectIsAddingContact","isAddingContact","ContactForm","dispatch","useDispatch","useSelector","isLoading","className","styles","name","onSubmit","e","preventDefault","form","target","elements","phone","some","contact","toLowerCase","value","focus","alert","addContact","reset","autoFocus","type","title","required","pattern","ContactItem","contactId","onClick","id","deleteContact","ContactList","filteredContacts","includes","map","_id","Notification","message","Filter","onChange","setFilter","Contacts","useEffect","fetchContacts","textAlign","length"],"sourceRoot":""}