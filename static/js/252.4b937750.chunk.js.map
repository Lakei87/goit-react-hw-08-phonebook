{"version":3,"file":"static/js/252.4b937750.chunk.js","mappings":"6QAEaA,GAAgBC,E,OAAAA,IAAO,IAAPA,CAAH,8GAGb,SAAAC,GAAK,OAAiC,IAA7BA,EAAMC,mBAA8B,OAAS,SAAjD,IACJ,SAAAD,GAAK,OAAiC,IAA7BA,EAAMC,mBAA8B,OAAS,SAAjD,I,SCiBJ,SAASC,IACtB,OAAoDC,EAAAA,EAAAA,WAAS,GAA7D,eAAOF,EAAP,KAA2BG,EAA3B,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAkCzB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,UAAC,KAAD,CACEC,SApCa,SAAAC,GACnBA,EAAEC,iBACF,IACA,EADaD,EAAEE,cACwBC,SAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErBZ,GACEa,EAAAA,EAAAA,IAAS,CACPH,KAAMA,EAAKI,MACXH,MAAOA,EAAMG,MACbF,SAAUA,EAASE,SAErBC,MAAK,SAAAC,GACL,OAAIA,EAAIC,MACCC,EAAAA,OAAAA,QAAeF,EAAIG,QAAQC,KAAKC,SAEhCH,EAAAA,OAAAA,KAAY,qDAEtB,GACF,EAmBOI,aAAa,MAFf,WAGE,SAAC,KAAD,+BAGA,SAAC,KAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,UAAU,EACVC,KAAK,OACLhB,KAAK,UAEP,SAAC,KAAD,CACEa,MAAM,QACNC,QAAQ,WACRC,UAAU,EACVC,KAAK,QACLhB,KAAK,WAEP,SAAC,KAAD,CACEa,MAAM,WACNC,QAAQ,WACRC,UAAU,EACVC,KAAK,WACLhB,KAAK,cAEP,SAAC,KAAD,CACEgB,KAAK,SACLF,QAAQ,YAFV,sBAMCtB,EAAKS,QACJ,UAAC,KAAD,0CAEE,SAAClB,EAAD,CACEkC,QApDW,WACvB,GAAI/B,EACF,OAAOsB,EAAAA,OAAAA,KAAY,yCAErBlB,GACE4B,EAAAA,EAAAA,IAAW,CAAEjB,MAAOT,EAAKS,SACzBI,MAAK,WACL,OAAOG,EAAAA,OAAAA,KAAY,uBACpB,IACDnB,GAAsB,EACvB,EA2Ca8B,KAAK,IACLjC,mBAAoBA,EAHtB,uBAQJ,UAAC,KAAD,qDAEE,SAAC,KAAD,CAAMkC,GAAG,SAAT,2BAQX,CClHc,SAASC,IACtB,OACE,SAAC,KAAD,WACE,SAAClC,EAAD,KAGL,CDQDqB,EAAAA,OAAAA,KAAY,CACVc,SAAU,aACVC,QAAS,IACTC,SAAU,Q","sources":["components/RegisterForm/registerForm.styled.jsx","components/RegisterForm/index.jsx","pages/Register/index.jsx"],"sourcesContent":["import { styled } from \"@mui/material/styles\";\n\nexport const SendMailAgain = styled('a')`\n    text-decoration: none;\n    margin-left: 5px;\n    color: ${props => props.isSendingMailAgain === true ? \"grey\" : \"#1976d2\"};\n    cursor: ${props => props.isSendingMailAgain === true ? \"help\" : \"pointer\"};\n`;","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Notify } from \"notiflix\";\r\nimport { register, resendMail } from \"redux/auth/operations\";\r\nimport { selectUser } from \"redux/auth/selectors\";\r\nimport {\r\n  FormWrap,\r\n  Section,\r\n  Container,\r\n  FormTitle,\r\n  Proposition,\r\n  Link,\r\n  Field,\r\n  Btn\r\n} from \"components/Box\";\r\nimport { SendMailAgain } from \"./registerForm.styled\";\r\n\r\nNotify.init({\r\n  position: 'center-top',\r\n  timeout: 5000,\r\n  fontSize: '16px',\r\n});\r\n\r\nexport default function RegisterForm() {\r\n  const [isSendingMailAgain, setIssendingMailAgain] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const { name, email, password } = form.elements;\r\n\r\n    dispatch(\r\n      register({\r\n        name: name.value,\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n    ).then(res => {\r\n      if (res.error) {\r\n        return Notify.failure(res.payload.data.message)\r\n      } else {\r\n        return Notify.info('Check your email and confirm registration, please.')\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleResendMail = () => {\r\n    if (isSendingMailAgain) {\r\n      return Notify.info('Check for correct your email address.');\r\n    }\r\n    dispatch(\r\n      resendMail({ email: user.email })\r\n    ).then(() => {\r\n      return Notify.info('Mail was sent again.');\r\n    });\r\n    setIssendingMailAgain(true);\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <FormWrap\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\">\r\n          <FormTitle>\r\n            Please register\r\n          </FormTitle>\r\n          <Field\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            required={true}\r\n            type=\"text\"\r\n            name=\"name\"\r\n          />\r\n          <Field\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            required={true}\r\n            type=\"email\"\r\n            name=\"email\"\r\n          />\r\n          <Field\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            required={true}\r\n            type=\"password\"\r\n            name=\"password\"\r\n          />\r\n          <Btn\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Register\r\n          </Btn>\r\n          {user.email &&\r\n            <Proposition>\r\n              Didn't get your email? Send \r\n              <SendMailAgain\r\n                onClick={handleResendMail}\r\n                href=\"#\"\r\n                isSendingMailAgain={isSendingMailAgain}>\r\n                again\r\n              </SendMailAgain>\r\n            </Proposition>\r\n          }\r\n          <Proposition>\r\n            Have an account already? Please, login\r\n            <Link to='/login'>\r\n              here\r\n            </Link>\r\n          </Proposition>\r\n        </FormWrap>\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n","import RegisterForm from \"components/RegisterForm\";\nimport { Main } from \"components/Box\";\n\nexport default function Register() {\n  return (\n    <Main>\n      <RegisterForm />\n    </Main>\n  );\n};\n"],"names":["SendMailAgain","styled","props","isSendingMailAgain","RegisterForm","useState","setIssendingMailAgain","dispatch","useDispatch","user","useSelector","selectUser","onSubmit","e","preventDefault","currentTarget","elements","name","email","password","register","value","then","res","error","Notify","payload","data","message","autoComplete","label","variant","required","type","onClick","resendMail","href","to","Register","position","timeout","fontSize"],"sourceRoot":""}